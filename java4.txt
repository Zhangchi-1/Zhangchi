##第63课 运算符
1.运算符是特殊符号，表示数据运算、赋值和比较
（1）算术运算符；
+ - * /  %(取余）
####除法的使用
System.out.println(10/4);//2 ；因为10和4 都是整数，故精度取整
System.out.println(10.0/4);//2.5
double d = 10/4;//java 10/2=2, 转成double的精度，输出2.0

####取模、取余// %的本质，a%b=a -a/b*b 
System.out.println(10%3);//1
System.out.println(-10%3);//-1  ==>-10-(-10)/3*3==>-10-(-3)*3==>-1
System.out.println(10%-3);//1;  ==>10 - 10/(-3)*(-3)==>10 - (-3)*(-3)==>1
);//-1   ==>-10 -(-10)/(-3)*(-3)==>-10+9==>-1

#### ++(自增）的使用 //i++等价于i=i+1;++i 等价于 i= i+1
int i = 10;
i++;
++i;
System.out.println("i=" +i);//12

####作为表达式使用：前++:++i先自增后赋值；后++:先赋值后自增；
int j = 8
int k = ++j; //等价于j = j+1;k=j;
System.out.println("k=" + k+"j=" +j)//k=9 j=9

int k = j++; //等价于k=j , j=j+1;
System.out.println("k=" + k+"j=" +j)//k=8 j=9

####经典例题
int i =1;
i = i++；
System.out.println(i);//1; temp=i;=>i=i+1=>i=temp

int i =1;
i =++i；
System.out.println(i);//2; i=i+1=>temp=i==>i=temp

####课堂练习 华氏温度转摄氏温度
public class Exercise02 {
	public static void main(String[] args) {
	double d2 = 234.5;
	double d3 = 5.0/9.0*(d2-100);//如果直接是5/9，则为0，文论怎样都输出0
	System.out.print("摄氏温度为：" + d3);
	}

}

（2）关系运算符
例子：
int a = 9;
int b = 8;
System.out.println(a>b);//true
boolean flag = a >b;
System.out.println("flag=" + flag);//flag=true

细节说明：1.结果都是boolean类型。ture OR false
2.“==”别误写成“=”
3.a>b，称为关系表达式

（3）逻辑运算符
1. 短路与&&，短路或||，取反！
2.逻辑与&，逻辑或|，逻辑异或^ 
 
3.短路与&&：
int age = 50;
if (age>20 && age <30) {
     System.out.println("ok100");//不会输出

逻辑与&： 
int age = 50;
if (age>20 & age <30) {
     System.out.println("ok100");//不会输出

#######&和&&的区别#######
int a = 4;
int b = 9;
if (a<1 && ++b<50) {            
     System.out.println("ok300");  
//当a<1成立后, &&后面的语句不会执行判断，效率高
System.out.println("a=" + a + "b=" + b);//4 9

if (a<1 & ++b<50) {            
     System.out.println("ok300");  
//对于逻辑与&而言，前面的条件false，后面的条件仍然会判
System.out.println("a=" + a + "b=" + b);//4 10
 
4.短路或||, 逻辑或|,只要有一个成立就是true,否则false
#######|| and |的区别 ######
int age = 50;
if (age>20 || age<30) {            
     System.out.println("ok100");  
//||第一条件true,第二条件不判断；|第一为真或假，第二条件都要执行

if (age>20 | age<30) {            
     System.out.println("ok200");  

5.取反！
System.out.println(60>20);//T
System.out.println(!(60>20));//T

#################逻辑异或
//a^b  逻辑异或，当a和b不同时，则结果为true,否则为false;
boolean b = (10>1) ^ (3<5);//10>1是真，3<5也是真，则false
System.out.println(“b=”+ b );//F

 （4）赋值运算符
 1.基本赋值运算符// int a =10
2.复合赋值运算符 +=，-=，*=，/=。%=等.//a+=b 等价于 a=a+b

注意：
1.赋值运算符左边，只能变量，右边可以是变量、表达式，常量值
2.复合赋值运算符会进行类型转换 
byte b = 3;
b +=2;//等价于 b = (byte)(b + 2);
b++;//等价于 b = (byte)(b+1)；底层有个类型转换

（5）三元运算符
基本语法:条件表达式？表达式1：表达式2；
运算规则：
1.条件表达式为true,运算后结果为表达式1;
2.条件表达式为false,运算后结果为表达式2;

例子:
int a =10;
int b =99;
int result = a>b? a ++ : b--(--b);
ystem.out.println(result);//99(98) 
//a>b ,false,返回b--,先返回b 的值，再执行b=b-1

####注意，表达式12要为可以赋格给接收变量的类型（或自动转换/强制转换）
int a =3;
int b = 8;
int c =a>b? (int)1.1 : (int)3.4;//可以
double d = a>b? a: b+3//可以，满足int=>double

####课堂练习，实现三个数的最大值
int n1 = 55;
	int n2 = 33;
	int n3 = 123;
	int max1 = n1>n2? n1:n2;
	int max2 = max1>n3? max1:n3;
	System.out.println("最大的数是" + max2);

（6）运算符的优先级
1.只有单目运算符和赋值运算符是从右向左运算的
2.优先级见表格

##第82节，标识符的命名规则和规范
1.标识符：java对各种变量、方法和类等命名时使用的字符序列称为标识符
2.凡是自己可以起名的地方都叫标识符 int num1 =90;

3.标识符的命名规则
（1）由26字母大小写，0-9，_或$组成
（2）数字不开头
（3）不用关键字和保留字
（4）Java中严格区分大小写，长度无限
（5）标识符不能包含空格

4.标识符命名规范
（1）包名：多单词组成时，所有字母都小写：aaa.bbb.ccc//比如com.hsp.com
（2）类名、接口名，多单词组成，所有单词首字母大写。例如：FloatDetial
（3）变量名、方法名：多单词，第一单词首字母小写，第二个单词开始首字母大写，tankShotGame
（4）常量名：所有字母大写，多单词用下划线连接，TAX_RATE

5.关键字：被java赋予了特殊含义，所有字母小写

##第86课 键盘输入语句
1.
import java.util.Scanner；//表示把java.util下的Scanner类导入
public class TernaryOperatorExercise {
	public static void main(String[] args) {
                         Scanner myScanner = new Scanner(System.in);//new  创建一个对象
                         System.out.println("请输入名字");
                         String name = myScanner.next();//接受用户输入,如果不输入，程序会卡在这不动
                         System.out.println("请输入年龄");
                         int age = myScanner.nextInt();//接受用户输入
                        System.out.println("请输入薪水");
                         double sal = myScanner.nextDouble();//接受用户输入
                         System.out.println("人的信息如下：");
                         System.out.println("名字"+name+"年龄”+age+"薪水"+sal);
                  }
}

##第87课 进制
1.二进制：0,1；以0b或0B开头
2.十进制：0-9，
3.八进制：0-7，以数字0开头；
4.十六进制：0-9及A(10)-F(15),以0x或0X开头，此处A-F不区分大小
eg:
                                 int n1 = 0b1010;
		int n2 = 1010;
		int n3 = 01010;
		int n4 = 0x10101;
		System.out.println("n1=" + n1);//n1=10
		System.out.println("n2=" + n2);//n2=1010
		System.out.println("n3=" + n3);//n3=520
		System.out.println("n4=" + n4);//n4=65793

5.进制的转换
（1）2 8 16 转10进制
规则：从最低位开始，将每个位上的数提取出来，乘以2的（位数-1）次方
例子：
0b1011 ==> 1*2^0+1*2^1+0*2^2+1*2^3=1+2+0+8=11
0234  ==> 4*8^0+3*8^1+2*8^2=4+24+128
0x23A  ==> 10*16^0+3*16^1+2*16^2=570

（2）10进制转2 8 16
规则：将该数不断除2，直到商是0，将每步的余数倒过来，就是对应的二进制
例子：
34 ==>34/2/2/2/2/2=0b100010
131 ==>131/8/8/8/8=0203
237 ==>237/16/16/16=0xED

（3）将2进制转换成8进制
规则：从低位开始，将二进制数每三位一组，转成对应的八进制数即可
例子：
0b11010101 ==>0b11（3）010（2）101（5）==>325

（4）2转16
规则：每四位一组
0b1101(13)0101(5) ==>0xD5

（5）将八进制转成二进制
规则：将八进制每一位数，转成对应的一个3位的二进制数即可
0237 ==>02(010)3(011)7(111) ==>ob010011111

（6）16进制转二进制
规则：16每一位转4位二进制
0x23B ==>0x2(0010)3(0011)B(1011) ==>0b001000111011

##第98课 位运算
1.int a = 1>>2;// 1向右位移2位
int e =3>>>2;//算数右移

##第99课 原码、反码、补码#######（背下来）
1.二进制的最高位是符号位，0表示正数，1表示负数
2.正数原码补码反码都一样（三码合一）
3.负数的反码=它的原码符号位不变，其他位取反
4.负数的补码=它的反码+1， 负数的反码=负数的补码-1
5.0的反码、补码都是0
6.java没有无符号数，都有符号
7.计算机运算，用补码的方式来运算
8.看运算结果，要看原码（重点）

###第100课 位运算符
运算规则：
1.按位与&：两位全为1，结果为1，否则为0
例子：10010001 11110010 ==>10010000
2.按位或|:两位有一个1，结果为1
3.按位异或^：两位一个0，一个1，结果为1，否则0
4.按位取反~：0==>1, 1==>0
例子：
System.out.println（2&3);//00000000 00000000 00000000 00000010 运算过后得到的补码==>原码也是这个，正数三码合一==>2
（1）先得到2的原码 ：00000000 00000000 00000000 00000010
（2）得到3的原码：00000000 00000000 00000000 00000011
##因为2和3 都是是int类型，四个字节，一个字节8位

System.out.println（~-2);//1
（1）-2的原码==>10000000 00000000 00000000 00000010
（2）-2的反码==>11111111 11111111 11111111 11111101
（3）-2的补码==>11111111 11111111 11111111 11111110
（4）取反：            00000000 00000000 00000000 00000001==>正数，原码一样==>1

System.out.println（~2);//-3
（1）2的补码==>00000000 00000000 00000000 00000010
（2）~2==>        11111111 11111111 11111111 11111101
（3）反码==>      11111111 11111111 11111111 11111100
（4）原码==>      10000000 00000000 00000000 00000011==>-3

##第101课 位运算符
1.算数右移>>:低位溢出，符号位不变，并用符号位补溢出的高位
2.算数左移<<:符号位不变，低位补0
3.>>>逻辑右移也叫无符号右移，运算规则是：低位溢出（扔掉），高位补0
4.没有<<<符号
例子：int a = 1>>2;
// 1==>00000000 00000000 00000000 00000001==>00000000 00000000 00000000 00000000

int c = 1<<2;
//1==>00000001==>00000100 本质 1*2*2

System.out.println(4<<3);//4*2*2*2=32
System.out.println(15>>2);//15/2/2=3==>7.5取整为7，/2为3.5再取整为3

##本章小结##
1.-10.5%3=-1.5
//a%b,当a是小数时，公式=a-(int)a/b*b
//-10.5%3=-10.5-(int)(-10.5)/3*3=-10.3-(-9)=-1.5
//注意：有小数运算，得到的结果是近似值

2.
int i =66
System.out.println(++i+i);i=66+1==>i=67

3.
(1)字符串强转，Integer.parseInt("18")









 


